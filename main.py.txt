from data_preparation import load_and_preprocess_data
from model import MedNetLite
from train import train_model
from evaluate import evaluate_model

# Load data
X_train, X_test, y_train, y_test = load_and_preprocess_data("waveform.csv")

# Initialize model
model = MedNetLite()
optimizer = torch.optim.Adam(model.parameters(), lr=0.001)
pos_weight = torch.tensor([1.5])
criterion = nn.BCEWithLogitsLoss(pos_weight=pos_weight)

# Train model
train_model(model, X_train, y_train, optimizer, criterion, epochs=20)

# Evaluate model
evaluate_model(model, X_test, y_test)


from torch.utils.data import DataLoader, TensorDataset
from baseline_models import run_baseline_models

# Prepare training loader
train_loader = DataLoader(TensorDataset(X_train, y_train), batch_size=32, shuffle=True)

# Run baseline models
baseline_results = run_baseline_models(X_test, y_test, train_loader)
